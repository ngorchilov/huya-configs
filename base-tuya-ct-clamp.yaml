# Tuya CT Clamp Base Module
# Usage: Include this package in devices using Tuya CT clamps.

substitutions:
    # UART Configuration
    uart_tx_pin: GPIO11 # Default TX pin for UART
    uart_rx_pin: GPIO10 # Default RX pin for UART
    uart_baud_rate: '9600' # Default baud rate for UART (must be a string)

    # Tuya Datapoint Scaling Factors
    power_scale: '0.1' # Scaling factor for power (DP 101, 105, 115)
    energy_scale: '0.01' # Scaling factor for energy (DP 106, 107, 108, 109, 130, 131)
    frequency_scale: '0.01' # Scaling factor for frequency (DP 111)
    voltage_scale: '0.1' # Scaling factor for voltage (DP 112)
    current_scale: '0.001' # Scaling factor for current (DP 113, 114)

uart:
    tx_pin: ${uart_tx_pin}
    rx_pin: ${uart_rx_pin}
    baud_rate: ${uart_baud_rate}

text_sensor:
    - platform: template
      name: Flow Direction Channel A
      id: current_flow_a
      icon: mdi:swap-horizontal

    - platform: template
      name: Flow Direction Channel B
      id: current_flow_b
      icon: mdi:swap-horizontal

sensor:
    - platform: template
      name: Energy Consumed
      id: energy_consumed
      unit_of_measurement: kWh
      accuracy_decimals: 2
      icon: mdi:lightning-bolt
      device_class: energy
      state_class: total_increasing

    - platform: template
      name: Energy Produced
      id: energy_produced
      unit_of_measurement: kWh
      accuracy_decimals: 2
      icon: mdi:lightning-bolt-outline
      device_class: energy
      state_class: total_increasing

    - platform: template
      name: Power Channel A
      id: power_a
      unit_of_measurement: W
      accuracy_decimals: 1
      icon: mdi:flash

    - platform: template
      name: Power Channel B
      id: power_b
      unit_of_measurement: W
      accuracy_decimals: 1
      icon: mdi:flash

    - platform: template
      name: Energy Consumed Channel A
      id: energy_consumed_a
      unit_of_measurement: kWh
      accuracy_decimals: 2
      icon: mdi:lightning-bolt

    - platform: template
      name: Energy Produced Channel A
      id: energy_produced_a
      unit_of_measurement: kWh
      accuracy_decimals: 2
      icon: mdi:lightning-bolt-outline

    - platform: template
      name: Energy Consumed Channel B
      id: energy_consumed_b
      unit_of_measurement: kWh
      accuracy_decimals: 2
      icon: mdi:lightning-bolt

    - platform: template
      name: Energy Produced Channel B
      id: energy_produced_b
      unit_of_measurement: kWh
      accuracy_decimals: 2
      icon: mdi:lightning-bolt-outline

    - platform: template
      name: Power Factor Channel A
      id: power_factor_a
      unit_of_measurement: '%'
      accuracy_decimals: 0
      icon: mdi:angle-acute

    - platform: template
      name: Power Factor Channel B
      id: power_factor_b
      unit_of_measurement: '%'
      accuracy_decimals: 0
      icon: mdi:angle-acute

    - platform: template
      name: Frequency
      id: frequency
      unit_of_measurement: Hz
      accuracy_decimals: 2
      icon: mdi:cosine-wave

    - platform: template
      name: Voltage
      id: voltage
      unit_of_measurement: V
      accuracy_decimals: 1
      icon: mdi:sine-wave

    - platform: template
      name: Current Channel A
      id: current_a
      unit_of_measurement: A
      accuracy_decimals: 3
      icon: mdi:current-ac

    - platform: template
      name: Current Channel B
      id: current_b
      unit_of_measurement: A
      accuracy_decimals: 3
      icon: mdi:current-ac

    - platform: template
      name: Total Power
      id: total_power
      unit_of_measurement: W
      accuracy_decimals: 1
      icon: mdi:flash

number:
    - platform: tuya
      name: Reporting Rate
      number_datapoint: 129
      min_value: 3
      max_value: 60
      step: 1
      unit_of_measurement: s
      icon: mdi:timer-outline

tuya:
    time_id: ha_time
    on_datapoint_update:
        - sensor_datapoint: 101 # Power Channel A (DP 101)
          datapoint_type: int
          then:
              - lambda: |-
                    id(power_a).publish_state(x * ${power_scale});

        - sensor_datapoint: 102 # Current Flow Direction Channel A
          datapoint_type: enum
          then:
              - lambda: |-
                    if (x == 0) {
                      id(current_flow_a).publish_state("Forward");
                    } else {
                      id(current_flow_a).publish_state("Reverse");
                    }

        - sensor_datapoint: 104 # Current Flow Direction Channel B
          datapoint_type: enum
          then:
              - lambda: |-
                    if (x == 0) {
                      id(current_flow_b).publish_state("Forward");
                    } else {
                      id(current_flow_b).publish_state("Reverse");
                    }

        - sensor_datapoint: 105 # Power Channel B (DP 105)
          datapoint_type: int
          then:
              - lambda: |-
                    id(power_b).publish_state(x * ${power_scale});

        - sensor_datapoint: 106 # Energy Consumed Channel A (DP 106)
          datapoint_type: int
          then:
              - lambda: |-
                    id(energy_consumed_a).publish_state(x * ${energy_scale});

        - sensor_datapoint: 107 # Energy Produced Channel A (DP 107)
          datapoint_type: int
          then:
              - lambda: |-
                    id(energy_produced_a).publish_state(x * ${energy_scale});

        - sensor_datapoint: 108 # Energy Consumed Channel B (DP 108)
          datapoint_type: int
          then:
              - lambda: |-
                    id(energy_consumed_b).publish_state(x * ${energy_scale});

        - sensor_datapoint: 109 # Energy Produced Channel B (DP 109)
          datapoint_type: int
          then:
              - lambda: |-
                    id(energy_produced_b).publish_state(x * ${energy_scale});

        - sensor_datapoint: 110 # Power Factor Channel A (DP 110)
          datapoint_type: int
          then:
              - lambda: |-
                    id(power_factor_a).publish_state(x);

        - sensor_datapoint: 111 # Frequency (DP 111)
          datapoint_type: int
          then:
              - lambda: |-
                    id(frequency).publish_state(x * ${frequency_scale});

        - sensor_datapoint: 112 # Voltage (DP 112)
          datapoint_type: int
          then:
              - lambda: |-
                    id(voltage).publish_state(x * ${voltage_scale});

        - sensor_datapoint: 113 # Current Channel A (DP 113)
          datapoint_type: int
          then:
              - lambda: |-
                    id(current_a).publish_state(x * ${current_scale});

        - sensor_datapoint: 114 # Current Channel B (DP 114)
          datapoint_type: int
          then:
              - lambda: |-
                    id(current_b).publish_state(x * ${current_scale});

        - sensor_datapoint: 115 # Total Power (DP 115)
          datapoint_type: int
          then:
              - lambda: |-
                    id(total_power).publish_state(x * ${power_scale});

        - sensor_datapoint: 121 # Power Factor Channel B (DP 121)
          datapoint_type: int
          then:
              - lambda: |-
                    id(power_factor_b).publish_state(x);

        - sensor_datapoint: 130 # Energy Consumed (DP 130)
          datapoint_type: int
          then:
              - lambda: |-
                    id(energy_consumed).publish_state(x * ${energy_scale});

        - sensor_datapoint: 131 # Energy Produced (DP 131)
          datapoint_type: int
          then:
              - lambda: |-
                    id(energy_produced).publish_state(x * ${energy_scale});
